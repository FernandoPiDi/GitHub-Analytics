# Generated by ariadne-codegen
# Source: https://api.github.com/graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    ActorType,
    AuditLogOrderField,
    CheckAnnotationLevel,
    CheckConclusionState,
    CheckRunType,
    CheckStatusState,
    CommitContributionOrderField,
    DeploymentOrderField,
    DeploymentStatusState,
    DiffSide,
    DiscussionCloseReason,
    DiscussionOrderField,
    DiscussionPollOptionOrderField,
    DismissReason,
    EnterpriseAdministratorInvitationOrderField,
    EnterpriseAdministratorRole,
    EnterpriseAllowPrivateRepositoryForkingPolicyValue,
    EnterpriseDefaultRepositoryPermissionSettingValue,
    EnterpriseDisallowedMethodsSettingValue,
    EnterpriseEnabledDisabledSettingValue,
    EnterpriseEnabledSettingValue,
    EnterpriseMemberInvitationOrderField,
    EnterpriseMemberOrderField,
    EnterpriseMembersCanCreateRepositoriesSettingValue,
    EnterpriseMembersCanMakePurchasesSettingValue,
    EnterpriseOrderField,
    EnterpriseServerInstallationOrderField,
    EnterpriseServerUserAccountEmailOrderField,
    EnterpriseServerUserAccountOrderField,
    EnterpriseServerUserAccountsUploadOrderField,
    EnvironmentOrderField,
    GistOrderField,
    IpAllowListEnabledSettingValue,
    IpAllowListEntryOrderField,
    IpAllowListForInstalledAppsEnabledSettingValue,
    IssueClosedStateReason,
    IssueCommentOrderField,
    IssueOrderField,
    IssueState,
    LabelOrderField,
    LanguageOrderField,
    LockReason,
    MannequinOrderField,
    MergeQueueGroupingStrategy,
    MergeQueueMergeMethod,
    MigrationSourceType,
    MilestoneOrderField,
    NotificationRestrictionSettingValue,
    OrderDirection,
    OrganizationMemberRole,
    OrganizationOrderField,
    OrgEnterpriseOwnerOrderField,
    PackageFileOrderField,
    PackageOrderField,
    PackageVersionOrderField,
    PinnedEnvironmentOrderField,
    ProjectOrderField,
    ProjectState,
    ProjectTemplate,
    ProjectV2CustomFieldType,
    ProjectV2FieldOrderField,
    ProjectV2ItemFieldValueOrderField,
    ProjectV2ItemOrderField,
    ProjectV2OrderField,
    ProjectV2Roles,
    ProjectV2SingleSelectFieldOptionColor,
    ProjectV2State,
    ProjectV2StatusUpdateOrderField,
    ProjectV2StatusUpdateStatus,
    ProjectV2ViewOrderField,
    ProjectV2WorkflowsOrderField,
    PullRequestBranchUpdateMethod,
    PullRequestMergeMethod,
    PullRequestOrderField,
    PullRequestReviewEvent,
    PullRequestReviewThreadSubjectType,
    PullRequestUpdateState,
    ReactionContent,
    ReactionOrderField,
    RefOrderField,
    ReleaseOrderField,
    ReportedContentClassifiers,
    RepositoryInteractionLimit,
    RepositoryInteractionLimitExpiry,
    RepositoryInvitationOrderField,
    RepositoryMigrationOrderDirection,
    RepositoryMigrationOrderField,
    RepositoryOrderField,
    RepositoryPermission,
    RepositoryRuleOrderField,
    RepositoryRulesetBypassActorBypassMode,
    RepositoryRulesetTarget,
    RepositoryRuleType,
    RepositoryVisibility,
    RequestableCheckStatusState,
    RoleInOrganization,
    RuleEnforcement,
    SamlDigestAlgorithm,
    SamlSignatureAlgorithm,
    SavedReplyOrderField,
    SecurityAdvisoryIdentifierType,
    SecurityAdvisoryOrderField,
    SecurityVulnerabilityOrderField,
    SponsorableOrderField,
    SponsorAndLifetimeValueOrderField,
    SponsorOrderField,
    SponsorsActivityOrderField,
    SponsorsCountryOrRegionCode,
    SponsorshipNewsletterOrderField,
    SponsorshipOrderField,
    SponsorshipPrivacy,
    SponsorsTierOrderField,
    StarOrderField,
    SubscriptionState,
    TeamDiscussionCommentOrderField,
    TeamDiscussionOrderField,
    TeamMemberOrderField,
    TeamOrderField,
    TeamRepositoryOrderField,
    TeamReviewAssignmentAlgorithm,
    TopicSuggestionDeclineReason,
    UserStatusOrderField,
    VerifiableDomainOrderField,
    WorkflowRunOrderField,
)


class AbortQueuedMigrationsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")


class AbortRepositoryMigrationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    migration_id: str = Field(alias="migrationId")


class AcceptEnterpriseAdministratorInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class AcceptEnterpriseMemberInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class AcceptTopicSuggestionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    name: Optional[str] = None


class AddAssigneesToAssignableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    assignable_id: str = Field(alias="assignableId")
    assignee_ids: List[str] = Field(alias="assigneeIds")


class AddCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")
    body: str


class AddDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    reply_to_id: Optional[str] = Field(alias="replyToId", default=None)
    body: str


class AddDiscussionPollVoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    poll_option_id: str = Field(alias="pollOptionId")


class AddEnterpriseOrganizationMemberInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")
    user_ids: List[str] = Field(alias="userIds")
    role: Optional[OrganizationMemberRole] = None


class AddEnterpriseSupportEntitlementInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class AddLabelsToLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    labelable_id: str = Field(alias="labelableId")
    label_ids: List[str] = Field(alias="labelIds")


class AddProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_column_id: str = Field(alias="projectColumnId")
    content_id: Optional[str] = Field(alias="contentId", default=None)
    note: Optional[str] = None


class AddProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    name: str


class AddProjectV2DraftIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    title: str
    body: Optional[str] = None
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)


class AddProjectV2ItemByIdInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    content_id: str = Field(alias="contentId")


class AddPullRequestReviewCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(
        alias="pullRequestReviewId", default=None
    )
    commit_oid: Optional[Any] = Field(alias="commitOID", default=None)
    body: Optional[str] = None
    path: Optional[str] = None
    position: Optional[int] = None
    in_reply_to: Optional[str] = Field(alias="inReplyTo", default=None)


class AddPullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    commit_oid: Optional[Any] = Field(alias="commitOID", default=None)
    body: Optional[str] = None
    event: Optional[PullRequestReviewEvent] = None
    comments: Optional[List[Optional["DraftPullRequestReviewComment"]]] = None
    threads: Optional[List[Optional["DraftPullRequestReviewThread"]]] = None


class AddPullRequestReviewThreadInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    path: str
    body: str
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(
        alias="pullRequestReviewId", default=None
    )
    line: Optional[int] = None
    side: Optional[DiffSide] = None
    start_line: Optional[int] = Field(alias="startLine", default=None)
    start_side: Optional[DiffSide] = Field(alias="startSide", default=None)
    subject_type: Optional[PullRequestReviewThreadSubjectType] = Field(
        alias="subjectType", default=None
    )


class AddPullRequestReviewThreadReplyInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: Optional[str] = Field(
        alias="pullRequestReviewId", default=None
    )
    pull_request_review_thread_id: str = Field(alias="pullRequestReviewThreadId")
    body: str


class AddReactionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")
    content: ReactionContent


class AddStarInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    starrable_id: str = Field(alias="starrableId")


class AddUpvoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class AddVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    domain: Any


class ApproveDeploymentsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    workflow_run_id: str = Field(alias="workflowRunId")
    environment_ids: List[str] = Field(alias="environmentIds")
    comment: Optional[str] = None


class ApproveVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class ArchiveProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")


class ArchiveRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class AuditLogOrder(BaseModel):
    field: Optional[AuditLogOrderField] = None
    direction: Optional[OrderDirection] = None


class BranchNamePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class BulkSponsorship(BaseModel):
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    amount: int


class CancelEnterpriseAdminInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class CancelEnterpriseMemberInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    invitation_id: str = Field(alias="invitationId")


class CancelSponsorshipInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)


class ChangeUserStatusInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    emoji: Optional[str] = None
    message: Optional[str] = None
    organization_id: Optional[str] = Field(alias="organizationId", default=None)
    limited_availability: Optional[bool] = Field(
        alias="limitedAvailability", default=None
    )
    expires_at: Optional[Any] = Field(alias="expiresAt", default=None)


class CheckAnnotationData(BaseModel):
    path: str
    location: "CheckAnnotationRange"
    annotation_level: CheckAnnotationLevel = Field(alias="annotationLevel")
    message: str
    title: Optional[str] = None
    raw_details: Optional[str] = Field(alias="rawDetails", default=None)


class CheckAnnotationRange(BaseModel):
    start_line: int = Field(alias="startLine")
    start_column: Optional[int] = Field(alias="startColumn", default=None)
    end_line: int = Field(alias="endLine")
    end_column: Optional[int] = Field(alias="endColumn", default=None)


class CheckRunAction(BaseModel):
    label: str
    description: str
    identifier: str


class CheckRunFilter(BaseModel):
    check_type: Optional[CheckRunType] = Field(alias="checkType", default=None)
    app_id: Optional[int] = Field(alias="appId", default=None)
    check_name: Optional[str] = Field(alias="checkName", default=None)
    status: Optional[CheckStatusState] = None
    statuses: Optional[List[CheckStatusState]] = None
    conclusions: Optional[List[CheckConclusionState]] = None


class CheckRunOutput(BaseModel):
    title: str
    summary: str
    text: Optional[str] = None
    annotations: Optional[List["CheckAnnotationData"]] = None
    images: Optional[List["CheckRunOutputImage"]] = None


class CheckRunOutputImage(BaseModel):
    alt: str
    image_url: Any = Field(alias="imageUrl")
    caption: Optional[str] = None


class CheckSuiteAutoTriggerPreference(BaseModel):
    app_id: str = Field(alias="appId")
    setting: bool


class CheckSuiteFilter(BaseModel):
    app_id: Optional[int] = Field(alias="appId", default=None)
    check_name: Optional[str] = Field(alias="checkName", default=None)


class ClearLabelsFromLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    labelable_id: str = Field(alias="labelableId")


class ClearProjectV2ItemFieldValueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")
    field_id: str = Field(alias="fieldId")


class CloneProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    target_owner_id: str = Field(alias="targetOwnerId")
    source_id: str = Field(alias="sourceId")
    include_workflows: bool = Field(alias="includeWorkflows")
    name: str
    body: Optional[str] = None
    public: Optional[bool] = None


class CloneTemplateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    name: str
    owner_id: str = Field(alias="ownerId")
    description: Optional[str] = None
    visibility: RepositoryVisibility
    include_all_branches: Optional[bool] = Field(
        alias="includeAllBranches", default=None
    )


class CloseDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    reason: Optional[DiscussionCloseReason] = None


class CloseIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")
    state_reason: Optional[IssueClosedStateReason] = Field(
        alias="stateReason", default=None
    )


class ClosePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class CodeScanningParametersInput(BaseModel):
    code_scanning_tools: List["CodeScanningToolInput"] = Field(
        alias="codeScanningTools"
    )


class CodeScanningToolInput(BaseModel):
    alerts_threshold: str = Field(alias="alertsThreshold")
    security_alerts_threshold: str = Field(alias="securityAlertsThreshold")
    tool: str


class CommitAuthor(BaseModel):
    id: Optional[str] = None
    emails: Optional[List[str]] = None


class CommitAuthorEmailPatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class CommitContributionOrder(BaseModel):
    field: CommitContributionOrderField
    direction: OrderDirection


class CommitMessage(BaseModel):
    headline: str
    body: Optional[str] = None


class CommitMessagePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class CommittableBranch(BaseModel):
    id: Optional[str] = None
    repository_name_with_owner: Optional[str] = Field(
        alias="repositoryNameWithOwner", default=None
    )
    branch_name: Optional[str] = Field(alias="branchName", default=None)


class CommitterEmailPatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class ContributionOrder(BaseModel):
    direction: OrderDirection


class ConvertProjectCardNoteToIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_card_id: str = Field(alias="projectCardId")
    repository_id: str = Field(alias="repositoryId")
    title: Optional[str] = None
    body: Optional[str] = None


class ConvertProjectV2DraftIssueItemToIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    repository_id: str = Field(alias="repositoryId")


class ConvertPullRequestToDraftInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class CopyProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    owner_id: str = Field(alias="ownerId")
    title: str
    include_draft_issues: Optional[bool] = Field(
        alias="includeDraftIssues", default=None
    )


class CreateAttributionInvitationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    source_id: str = Field(alias="sourceId")
    target_id: str = Field(alias="targetId")


class CreateBranchProtectionRuleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    pattern: str
    requires_approving_reviews: Optional[bool] = Field(
        alias="requiresApprovingReviews", default=None
    )
    required_approving_review_count: Optional[int] = Field(
        alias="requiredApprovingReviewCount", default=None
    )
    requires_commit_signatures: Optional[bool] = Field(
        alias="requiresCommitSignatures", default=None
    )
    requires_linear_history: Optional[bool] = Field(
        alias="requiresLinearHistory", default=None
    )
    blocks_creations: Optional[bool] = Field(alias="blocksCreations", default=None)
    allows_force_pushes: Optional[bool] = Field(alias="allowsForcePushes", default=None)
    allows_deletions: Optional[bool] = Field(alias="allowsDeletions", default=None)
    is_admin_enforced: Optional[bool] = Field(alias="isAdminEnforced", default=None)
    requires_status_checks: Optional[bool] = Field(
        alias="requiresStatusChecks", default=None
    )
    requires_strict_status_checks: Optional[bool] = Field(
        alias="requiresStrictStatusChecks", default=None
    )
    requires_code_owner_reviews: Optional[bool] = Field(
        alias="requiresCodeOwnerReviews", default=None
    )
    dismisses_stale_reviews: Optional[bool] = Field(
        alias="dismissesStaleReviews", default=None
    )
    restricts_review_dismissals: Optional[bool] = Field(
        alias="restrictsReviewDismissals", default=None
    )
    review_dismissal_actor_ids: Optional[List[str]] = Field(
        alias="reviewDismissalActorIds", default=None
    )
    bypass_pull_request_actor_ids: Optional[List[str]] = Field(
        alias="bypassPullRequestActorIds", default=None
    )
    bypass_force_push_actor_ids: Optional[List[str]] = Field(
        alias="bypassForcePushActorIds", default=None
    )
    restricts_pushes: Optional[bool] = Field(alias="restrictsPushes", default=None)
    push_actor_ids: Optional[List[str]] = Field(alias="pushActorIds", default=None)
    required_status_check_contexts: Optional[List[str]] = Field(
        alias="requiredStatusCheckContexts", default=None
    )
    required_status_checks: Optional[List["RequiredStatusCheckInput"]] = Field(
        alias="requiredStatusChecks", default=None
    )
    requires_deployments: Optional[bool] = Field(
        alias="requiresDeployments", default=None
    )
    required_deployment_environments: Optional[List[str]] = Field(
        alias="requiredDeploymentEnvironments", default=None
    )
    requires_conversation_resolution: Optional[bool] = Field(
        alias="requiresConversationResolution", default=None
    )
    require_last_push_approval: Optional[bool] = Field(
        alias="requireLastPushApproval", default=None
    )
    lock_branch: Optional[bool] = Field(alias="lockBranch", default=None)
    lock_allows_fetch_and_merge: Optional[bool] = Field(
        alias="lockAllowsFetchAndMerge", default=None
    )


class CreateCheckRunInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    name: str
    head_sha: Any = Field(alias="headSha")
    details_url: Optional[Any] = Field(alias="detailsUrl", default=None)
    external_id: Optional[str] = Field(alias="externalId", default=None)
    status: Optional[RequestableCheckStatusState] = None
    started_at: Optional[Any] = Field(alias="startedAt", default=None)
    conclusion: Optional[CheckConclusionState] = None
    completed_at: Optional[Any] = Field(alias="completedAt", default=None)
    output: Optional["CheckRunOutput"] = None
    actions: Optional[List["CheckRunAction"]] = None


class CreateCheckSuiteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    head_sha: Any = Field(alias="headSha")


class CreateCommitOnBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    branch: "CommittableBranch"
    file_changes: Optional["FileChanges"] = Field(alias="fileChanges", default=None)
    message: "CommitMessage"
    expected_head_oid: Any = Field(alias="expectedHeadOid")


class CreateDeploymentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    ref_id: str = Field(alias="refId")
    auto_merge: Optional[bool] = Field(alias="autoMerge", default=None)
    required_contexts: Optional[List[str]] = Field(
        alias="requiredContexts", default=None
    )
    description: Optional[str] = None
    environment: Optional[str] = None
    task: Optional[str] = None
    payload: Optional[str] = None


class CreateDeploymentStatusInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    deployment_id: str = Field(alias="deploymentId")
    state: DeploymentStatusState
    description: Optional[str] = None
    environment: Optional[str] = None
    environment_url: Optional[str] = Field(alias="environmentUrl", default=None)
    auto_inactive: Optional[bool] = Field(alias="autoInactive", default=None)
    log_url: Optional[str] = Field(alias="logUrl", default=None)


class CreateDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    title: str
    body: str
    category_id: str = Field(alias="categoryId")


class CreateEnterpriseOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str
    profile_name: str = Field(alias="profileName")
    billing_email: str = Field(alias="billingEmail")
    admin_logins: List[str] = Field(alias="adminLogins")


class CreateEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    name: str


class CreateIpAllowListEntryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    allow_list_value: str = Field(alias="allowListValue")
    name: Optional[str] = None
    is_active: bool = Field(alias="isActive")


class CreateIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    title: str
    body: Optional[str] = None
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)
    issue_template: Optional[str] = Field(alias="issueTemplate", default=None)


class CreateLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    color: str
    name: str
    description: Optional[str] = None


class CreateLinkedBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")
    oid: Any
    name: Optional[str] = None
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)


class CreateMigrationSourceInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    url: Optional[str] = None
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    type: MigrationSourceType
    owner_id: str = Field(alias="ownerId")
    github_pat: Optional[str] = Field(alias="githubPat", default=None)


class CreateProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    name: str
    body: Optional[str] = None
    template: Optional[ProjectTemplate] = None
    repository_ids: Optional[List[str]] = Field(alias="repositoryIds", default=None)


class CreateProjectV2FieldInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    data_type: ProjectV2CustomFieldType = Field(alias="dataType")
    name: str
    single_select_options: Optional[List["ProjectV2SingleSelectFieldOptionInput"]] = (
        Field(alias="singleSelectOptions", default=None)
    )


class CreateProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    title: str
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)


class CreateProjectV2StatusUpdateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    start_date: Optional[Any] = Field(alias="startDate", default=None)
    target_date: Optional[Any] = Field(alias="targetDate", default=None)
    status: Optional[ProjectV2StatusUpdateStatus] = None
    body: Optional[str] = None


class CreatePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    base_ref_name: str = Field(alias="baseRefName")
    head_ref_name: str = Field(alias="headRefName")
    head_repository_id: Optional[str] = Field(alias="headRepositoryId", default=None)
    title: str
    body: Optional[str] = None
    maintainer_can_modify: Optional[bool] = Field(
        alias="maintainerCanModify", default=None
    )
    draft: Optional[bool] = None


class CreateRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    name: str
    oid: Any


class CreateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    owner_id: Optional[str] = Field(alias="ownerId", default=None)
    description: Optional[str] = None
    visibility: RepositoryVisibility
    template: Optional[bool] = None
    homepage_url: Optional[Any] = Field(alias="homepageUrl", default=None)
    has_wiki_enabled: Optional[bool] = Field(alias="hasWikiEnabled", default=None)
    has_issues_enabled: Optional[bool] = Field(alias="hasIssuesEnabled", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)


class CreateRepositoryRulesetInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    source_id: str = Field(alias="sourceId")
    name: str
    target: Optional[RepositoryRulesetTarget] = None
    rules: Optional[List["RepositoryRuleInput"]] = None
    conditions: "RepositoryRuleConditionsInput"
    enforcement: RuleEnforcement
    bypass_actors: Optional[List["RepositoryRulesetBypassActorInput"]] = Field(
        alias="bypassActors", default=None
    )


class CreateSponsorsListingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    fiscal_host_login: Optional[str] = Field(alias="fiscalHostLogin", default=None)
    fiscally_hosted_project_profile_url: Optional[str] = Field(
        alias="fiscallyHostedProjectProfileUrl", default=None
    )
    billing_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = Field(
        alias="billingCountryOrRegionCode", default=None
    )
    residence_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = Field(
        alias="residenceCountryOrRegionCode", default=None
    )
    contact_email: Optional[str] = Field(alias="contactEmail", default=None)
    full_description: Optional[str] = Field(alias="fullDescription", default=None)


class CreateSponsorsTierInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    amount: int
    is_recurring: Optional[bool] = Field(alias="isRecurring", default=None)
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    repository_owner_login: Optional[str] = Field(
        alias="repositoryOwnerLogin", default=None
    )
    repository_name: Optional[str] = Field(alias="repositoryName", default=None)
    welcome_message: Optional[str] = Field(alias="welcomeMessage", default=None)
    description: str
    publish: Optional[bool] = None


class CreateSponsorshipInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    tier_id: Optional[str] = Field(alias="tierId", default=None)
    amount: Optional[int] = None
    is_recurring: Optional[bool] = Field(alias="isRecurring", default=None)
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(
        alias="privacyLevel", default=None
    )


class CreateSponsorshipsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsor_login: str = Field(alias="sponsorLogin")
    sponsorships: List["BulkSponsorship"]
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(
        alias="privacyLevel", default=None
    )
    recurring: Optional[bool] = None


class CreateTeamDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: Optional[str] = Field(alias="discussionId", default=None)
    body: Optional[str] = None


class CreateTeamDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)
    title: Optional[str] = None
    body: Optional[str] = None
    private: Optional[bool] = None


class CreateUserListInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    name: str
    description: Optional[str] = None
    is_private: Optional[bool] = Field(alias="isPrivate", default=None)


class DeclineTopicSuggestionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: Optional[str] = Field(alias="repositoryId", default=None)
    name: Optional[str] = None
    reason: Optional[TopicSuggestionDeclineReason] = None


class DeleteBranchProtectionRuleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    branch_protection_rule_id: str = Field(alias="branchProtectionRuleId")


class DeleteDeploymentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteIpAllowListEntryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ip_allow_list_entry_id: str = Field(alias="ipAllowListEntryId")


class DeleteIssueCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class DeleteLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteLinkedBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    linked_branch_id: str = Field(alias="linkedBranchId")


class DeletePackageVersionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    package_version_id: str = Field(alias="packageVersionId")


class DeleteProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    card_id: str = Field(alias="cardId")


class DeleteProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_id: str = Field(alias="columnId")


class DeleteProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class DeleteProjectV2FieldInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    field_id: str = Field(alias="fieldId")


class DeleteProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class DeleteProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")


class DeleteProjectV2StatusUpdateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    status_update_id: str = Field(alias="statusUpdateId")


class DeleteProjectV2WorkflowInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    workflow_id: str = Field(alias="workflowId")


class DeletePullRequestReviewCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeletePullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: str = Field(alias="pullRequestReviewId")


class DeleteRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ref_id: str = Field(alias="refId")


class DeleteRepositoryRulesetInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_ruleset_id: str = Field(alias="repositoryRulesetId")


class DeleteTeamDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteTeamDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeleteUserListInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    list_id: str = Field(alias="listId")


class DeleteVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DeploymentOrder(BaseModel):
    field: DeploymentOrderField
    direction: OrderDirection


class DequeuePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class DisablePullRequestAutoMergeInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class DiscussionOrder(BaseModel):
    field: DiscussionOrderField
    direction: OrderDirection


class DiscussionPollOptionOrder(BaseModel):
    field: DiscussionPollOptionOrderField
    direction: OrderDirection


class DismissPullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: str = Field(alias="pullRequestReviewId")
    message: str


class DismissRepositoryVulnerabilityAlertInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_vulnerability_alert_id: str = Field(
        alias="repositoryVulnerabilityAlertId"
    )
    dismiss_reason: DismissReason = Field(alias="dismissReason")


class DraftPullRequestReviewComment(BaseModel):
    path: str
    position: int
    body: str


class DraftPullRequestReviewThread(BaseModel):
    path: str
    line: int
    side: Optional[DiffSide] = None
    start_line: Optional[int] = Field(alias="startLine", default=None)
    start_side: Optional[DiffSide] = Field(alias="startSide", default=None)
    body: str


class EnablePullRequestAutoMergeInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    commit_headline: Optional[str] = Field(alias="commitHeadline", default=None)
    commit_body: Optional[str] = Field(alias="commitBody", default=None)
    merge_method: Optional[PullRequestMergeMethod] = Field(
        alias="mergeMethod", default=None
    )
    author_email: Optional[str] = Field(alias="authorEmail", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)


class EnqueuePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    jump: Optional[bool] = None
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)


class EnterpriseAdministratorInvitationOrder(BaseModel):
    field: EnterpriseAdministratorInvitationOrderField
    direction: OrderDirection


class EnterpriseMemberInvitationOrder(BaseModel):
    field: EnterpriseMemberInvitationOrderField
    direction: OrderDirection


class EnterpriseMemberOrder(BaseModel):
    field: EnterpriseMemberOrderField
    direction: OrderDirection


class EnterpriseOrder(BaseModel):
    field: EnterpriseOrderField
    direction: OrderDirection


class EnterpriseServerInstallationOrder(BaseModel):
    field: EnterpriseServerInstallationOrderField
    direction: OrderDirection


class EnterpriseServerUserAccountEmailOrder(BaseModel):
    field: EnterpriseServerUserAccountEmailOrderField
    direction: OrderDirection


class EnterpriseServerUserAccountOrder(BaseModel):
    field: EnterpriseServerUserAccountOrderField
    direction: OrderDirection


class EnterpriseServerUserAccountsUploadOrder(BaseModel):
    field: EnterpriseServerUserAccountsUploadOrderField
    direction: OrderDirection


class Environments(BaseModel):
    field: EnvironmentOrderField
    direction: OrderDirection


class FileAddition(BaseModel):
    path: str
    contents: Any


class FileChanges(BaseModel):
    deletions: Optional[List["FileDeletion"]] = None
    additions: Optional[List["FileAddition"]] = None


class FileDeletion(BaseModel):
    path: str


class FileExtensionRestrictionParametersInput(BaseModel):
    restricted_file_extensions: List[str] = Field(alias="restrictedFileExtensions")


class FilePathRestrictionParametersInput(BaseModel):
    restricted_file_paths: List[str] = Field(alias="restrictedFilePaths")


class FollowOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class FollowUserInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")


class GistOrder(BaseModel):
    field: GistOrderField
    direction: OrderDirection


class GrantEnterpriseOrganizationsMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class GrantMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    actor: str
    actor_type: ActorType = Field(alias="actorType")


class ImportProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_name: str = Field(alias="ownerName")
    name: str
    body: Optional[str] = None
    public: Optional[bool] = None
    column_imports: List["ProjectColumnImport"] = Field(alias="columnImports")


class InviteEnterpriseAdminInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    invitee: Optional[str] = None
    email: Optional[str] = None
    role: Optional[EnterpriseAdministratorRole] = None


class InviteEnterpriseMemberInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    invitee: Optional[str] = None
    email: Optional[str] = None


class IpAllowListEntryOrder(BaseModel):
    field: IpAllowListEntryOrderField
    direction: OrderDirection


class IssueCommentOrder(BaseModel):
    field: IssueCommentOrderField
    direction: OrderDirection


class IssueFilters(BaseModel):
    assignee: Optional[str] = None
    created_by: Optional[str] = Field(alias="createdBy", default=None)
    labels: Optional[List[str]] = None
    mentioned: Optional[str] = None
    milestone: Optional[str] = None
    milestone_number: Optional[str] = Field(alias="milestoneNumber", default=None)
    since: Optional[Any] = None
    states: Optional[List[IssueState]] = None
    viewer_subscribed: Optional[bool] = Field(alias="viewerSubscribed", default=None)


class IssueOrder(BaseModel):
    field: IssueOrderField
    direction: OrderDirection


class LabelOrder(BaseModel):
    field: LabelOrderField
    direction: OrderDirection


class LanguageOrder(BaseModel):
    field: LanguageOrderField
    direction: OrderDirection


class LinkProjectV2ToRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class LinkProjectV2ToTeamInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    team_id: str = Field(alias="teamId")


class LinkRepositoryToProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class LockLockableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    lockable_id: str = Field(alias="lockableId")
    lock_reason: Optional[LockReason] = Field(alias="lockReason", default=None)


class MannequinOrder(BaseModel):
    field: MannequinOrderField
    direction: OrderDirection


class MarkDiscussionCommentAsAnswerInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class MarkFileAsViewedInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    path: str


class MarkNotificationAsDoneInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class MarkProjectV2AsTemplateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class MarkPullRequestReadyForReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class MaxFilePathLengthParametersInput(BaseModel):
    max_file_path_length: int = Field(alias="maxFilePathLength")


class MaxFileSizeParametersInput(BaseModel):
    max_file_size: int = Field(alias="maxFileSize")


class MergeBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    base: str
    head: str
    commit_message: Optional[str] = Field(alias="commitMessage", default=None)
    author_email: Optional[str] = Field(alias="authorEmail", default=None)


class MergePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    commit_headline: Optional[str] = Field(alias="commitHeadline", default=None)
    commit_body: Optional[str] = Field(alias="commitBody", default=None)
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    merge_method: Optional[PullRequestMergeMethod] = Field(
        alias="mergeMethod", default=None
    )
    author_email: Optional[str] = Field(alias="authorEmail", default=None)


class MergeQueueParametersInput(BaseModel):
    check_response_timeout_minutes: int = Field(alias="checkResponseTimeoutMinutes")
    grouping_strategy: MergeQueueGroupingStrategy = Field(alias="groupingStrategy")
    max_entries_to_build: int = Field(alias="maxEntriesToBuild")
    max_entries_to_merge: int = Field(alias="maxEntriesToMerge")
    merge_method: MergeQueueMergeMethod = Field(alias="mergeMethod")
    min_entries_to_merge: int = Field(alias="minEntriesToMerge")
    min_entries_to_merge_wait_minutes: int = Field(alias="minEntriesToMergeWaitMinutes")


class MilestoneOrder(BaseModel):
    field: MilestoneOrderField
    direction: OrderDirection


class MinimizeCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")
    classifier: ReportedContentClassifiers


class MoveProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    card_id: str = Field(alias="cardId")
    column_id: str = Field(alias="columnId")
    after_card_id: Optional[str] = Field(alias="afterCardId", default=None)


class MoveProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    column_id: str = Field(alias="columnId")
    after_column_id: Optional[str] = Field(alias="afterColumnId", default=None)


class OrgEnterpriseOwnerOrder(BaseModel):
    field: OrgEnterpriseOwnerOrderField
    direction: OrderDirection


class OrganizationOrder(BaseModel):
    field: OrganizationOrderField
    direction: OrderDirection


class PackageFileOrder(BaseModel):
    field: Optional[PackageFileOrderField] = None
    direction: Optional[OrderDirection] = None


class PackageOrder(BaseModel):
    field: Optional[PackageOrderField] = None
    direction: Optional[OrderDirection] = None


class PackageVersionOrder(BaseModel):
    field: Optional[PackageVersionOrderField] = None
    direction: Optional[OrderDirection] = None


class PinEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    environment_id: str = Field(alias="environmentId")
    pinned: bool


class PinIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class PinnedEnvironmentOrder(BaseModel):
    field: PinnedEnvironmentOrderField
    direction: OrderDirection


class ProjectCardImport(BaseModel):
    repository: str
    number: int


class ProjectColumnImport(BaseModel):
    column_name: str = Field(alias="columnName")
    position: int
    issues: Optional[List["ProjectCardImport"]] = None


class ProjectOrder(BaseModel):
    field: ProjectOrderField
    direction: OrderDirection


class ProjectV2Collaborator(BaseModel):
    user_id: Optional[str] = Field(alias="userId", default=None)
    team_id: Optional[str] = Field(alias="teamId", default=None)
    role: ProjectV2Roles


class ProjectV2FieldOrder(BaseModel):
    field: ProjectV2FieldOrderField
    direction: OrderDirection


class ProjectV2FieldValue(BaseModel):
    text: Optional[str] = None
    number: Optional[float] = None
    date: Optional[Any] = None
    single_select_option_id: Optional[str] = Field(
        alias="singleSelectOptionId", default=None
    )
    iteration_id: Optional[str] = Field(alias="iterationId", default=None)


class ProjectV2Filters(BaseModel):
    state: Optional[ProjectV2State] = None


class ProjectV2ItemFieldValueOrder(BaseModel):
    field: ProjectV2ItemFieldValueOrderField
    direction: OrderDirection


class ProjectV2ItemOrder(BaseModel):
    field: ProjectV2ItemOrderField
    direction: OrderDirection


class ProjectV2Order(BaseModel):
    field: ProjectV2OrderField
    direction: OrderDirection


class ProjectV2SingleSelectFieldOptionInput(BaseModel):
    name: str
    color: ProjectV2SingleSelectFieldOptionColor
    description: str


class ProjectV2StatusOrder(BaseModel):
    field: ProjectV2StatusUpdateOrderField
    direction: OrderDirection


class ProjectV2ViewOrder(BaseModel):
    field: ProjectV2ViewOrderField
    direction: OrderDirection


class ProjectV2WorkflowOrder(BaseModel):
    field: ProjectV2WorkflowsOrderField
    direction: OrderDirection


class PropertyTargetDefinitionInput(BaseModel):
    name: str
    property_values: List[str] = Field(alias="propertyValues")
    source: Optional[str] = None


class PublishSponsorsTierInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    tier_id: str = Field(alias="tierId")


class PullRequestOrder(BaseModel):
    field: PullRequestOrderField
    direction: OrderDirection


class PullRequestParametersInput(BaseModel):
    dismiss_stale_reviews_on_push: bool = Field(alias="dismissStaleReviewsOnPush")
    require_code_owner_review: bool = Field(alias="requireCodeOwnerReview")
    require_last_push_approval: bool = Field(alias="requireLastPushApproval")
    required_approving_review_count: int = Field(alias="requiredApprovingReviewCount")
    required_review_thread_resolution: bool = Field(
        alias="requiredReviewThreadResolution"
    )


class ReactionOrder(BaseModel):
    field: ReactionOrderField
    direction: OrderDirection


class RefNameConditionTargetInput(BaseModel):
    exclude: List[str]
    include: List[str]


class RefOrder(BaseModel):
    field: RefOrderField
    direction: OrderDirection


class RefUpdate(BaseModel):
    name: Any
    after_oid: Any = Field(alias="afterOid")
    before_oid: Optional[Any] = Field(alias="beforeOid", default=None)
    force: Optional[bool] = None


class RegenerateEnterpriseIdentityProviderRecoveryCodesInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")


class RegenerateVerifiableDomainTokenInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class RejectDeploymentsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    workflow_run_id: str = Field(alias="workflowRunId")
    environment_ids: List[str] = Field(alias="environmentIds")
    comment: Optional[str] = None


class ReleaseOrder(BaseModel):
    field: ReleaseOrderField
    direction: OrderDirection


class RemoveAssigneesFromAssignableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    assignable_id: str = Field(alias="assignableId")
    assignee_ids: List[str] = Field(alias="assigneeIds")


class RemoveEnterpriseAdminInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RemoveEnterpriseIdentityProviderInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")


class RemoveEnterpriseMemberInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    user_id: str = Field(alias="userId")


class RemoveEnterpriseOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")


class RemoveEnterpriseSupportEntitlementInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RemoveLabelsFromLabelableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    labelable_id: str = Field(alias="labelableId")
    label_ids: List[str] = Field(alias="labelIds")


class RemoveOutsideCollaboratorInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")
    organization_id: str = Field(alias="organizationId")


class RemoveReactionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")
    content: ReactionContent


class RemoveStarInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    starrable_id: str = Field(alias="starrableId")


class RemoveUpvoteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class ReopenDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")


class ReopenIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class ReopenPullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")


class ReorderEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    environment_id: str = Field(alias="environmentId")
    position: int


class RepositoryIdConditionTargetInput(BaseModel):
    repository_ids: List[str] = Field(alias="repositoryIds")


class RepositoryInvitationOrder(BaseModel):
    field: RepositoryInvitationOrderField
    direction: OrderDirection


class RepositoryMigrationOrder(BaseModel):
    field: RepositoryMigrationOrderField
    direction: RepositoryMigrationOrderDirection


class RepositoryNameConditionTargetInput(BaseModel):
    exclude: List[str]
    include: List[str]
    protected: Optional[bool] = None


class RepositoryOrder(BaseModel):
    field: RepositoryOrderField
    direction: OrderDirection


class RepositoryPropertyConditionTargetInput(BaseModel):
    exclude: List["PropertyTargetDefinitionInput"]
    include: List["PropertyTargetDefinitionInput"]


class RepositoryRuleConditionsInput(BaseModel):
    ref_name: Optional["RefNameConditionTargetInput"] = Field(
        alias="refName", default=None
    )
    repository_name: Optional["RepositoryNameConditionTargetInput"] = Field(
        alias="repositoryName", default=None
    )
    repository_id: Optional["RepositoryIdConditionTargetInput"] = Field(
        alias="repositoryId", default=None
    )
    repository_property: Optional["RepositoryPropertyConditionTargetInput"] = Field(
        alias="repositoryProperty", default=None
    )


class RepositoryRuleInput(BaseModel):
    id: Optional[str] = None
    type: RepositoryRuleType
    parameters: Optional["RuleParametersInput"] = None


class RepositoryRuleOrder(BaseModel):
    field: RepositoryRuleOrderField
    direction: OrderDirection


class RepositoryRulesetBypassActorInput(BaseModel):
    actor_id: Optional[str] = Field(alias="actorId", default=None)
    repository_role_database_id: Optional[int] = Field(
        alias="repositoryRoleDatabaseId", default=None
    )
    organization_admin: Optional[bool] = Field(alias="organizationAdmin", default=None)
    enterprise_owner: Optional[bool] = Field(alias="enterpriseOwner", default=None)
    deploy_key: Optional[bool] = Field(alias="deployKey", default=None)
    bypass_mode: RepositoryRulesetBypassActorBypassMode = Field(alias="bypassMode")


class RequestReviewsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    user_ids: Optional[List[str]] = Field(alias="userIds", default=None)
    team_ids: Optional[List[str]] = Field(alias="teamIds", default=None)
    union: Optional[bool] = None


class RequiredDeploymentsParametersInput(BaseModel):
    required_deployment_environments: List[str] = Field(
        alias="requiredDeploymentEnvironments"
    )


class RequiredStatusCheckInput(BaseModel):
    context: str
    app_id: Optional[str] = Field(alias="appId", default=None)


class RequiredStatusChecksParametersInput(BaseModel):
    do_not_enforce_on_create: Optional[bool] = Field(
        alias="doNotEnforceOnCreate", default=None
    )
    required_status_checks: List["StatusCheckConfigurationInput"] = Field(
        alias="requiredStatusChecks"
    )
    strict_required_status_checks_policy: bool = Field(
        alias="strictRequiredStatusChecksPolicy"
    )


class RerequestCheckSuiteInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    check_suite_id: str = Field(alias="checkSuiteId")


class ResolveReviewThreadInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    thread_id: str = Field(alias="threadId")


class RetireSponsorsTierInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    tier_id: str = Field(alias="tierId")


class RevertPullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    title: Optional[str] = None
    body: Optional[str] = None
    draft: Optional[bool] = None


class RevokeEnterpriseOrganizationsMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str


class RevokeMigratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    actor: str
    actor_type: ActorType = Field(alias="actorType")


class RuleParametersInput(BaseModel):
    update: Optional["UpdateParametersInput"] = None
    merge_queue: Optional["MergeQueueParametersInput"] = Field(
        alias="mergeQueue", default=None
    )
    required_deployments: Optional["RequiredDeploymentsParametersInput"] = Field(
        alias="requiredDeployments", default=None
    )
    pull_request: Optional["PullRequestParametersInput"] = Field(
        alias="pullRequest", default=None
    )
    required_status_checks: Optional["RequiredStatusChecksParametersInput"] = Field(
        alias="requiredStatusChecks", default=None
    )
    commit_message_pattern: Optional["CommitMessagePatternParametersInput"] = Field(
        alias="commitMessagePattern", default=None
    )
    commit_author_email_pattern: Optional["CommitAuthorEmailPatternParametersInput"] = (
        Field(alias="commitAuthorEmailPattern", default=None)
    )
    committer_email_pattern: Optional["CommitterEmailPatternParametersInput"] = Field(
        alias="committerEmailPattern", default=None
    )
    branch_name_pattern: Optional["BranchNamePatternParametersInput"] = Field(
        alias="branchNamePattern", default=None
    )
    tag_name_pattern: Optional["TagNamePatternParametersInput"] = Field(
        alias="tagNamePattern", default=None
    )
    file_path_restriction: Optional["FilePathRestrictionParametersInput"] = Field(
        alias="filePathRestriction", default=None
    )
    max_file_path_length: Optional["MaxFilePathLengthParametersInput"] = Field(
        alias="maxFilePathLength", default=None
    )
    file_extension_restriction: Optional["FileExtensionRestrictionParametersInput"] = (
        Field(alias="fileExtensionRestriction", default=None)
    )
    max_file_size: Optional["MaxFileSizeParametersInput"] = Field(
        alias="maxFileSize", default=None
    )
    workflows: Optional["WorkflowsParametersInput"] = None
    code_scanning: Optional["CodeScanningParametersInput"] = Field(
        alias="codeScanning", default=None
    )


class SavedReplyOrder(BaseModel):
    field: SavedReplyOrderField
    direction: OrderDirection


class SecurityAdvisoryIdentifierFilter(BaseModel):
    type: SecurityAdvisoryIdentifierType
    value: str


class SecurityAdvisoryOrder(BaseModel):
    field: SecurityAdvisoryOrderField
    direction: OrderDirection


class SecurityVulnerabilityOrder(BaseModel):
    field: SecurityVulnerabilityOrderField
    direction: OrderDirection


class SetEnterpriseIdentityProviderInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    sso_url: Any = Field(alias="ssoUrl")
    issuer: Optional[str] = None
    idp_certificate: str = Field(alias="idpCertificate")
    signature_method: SamlSignatureAlgorithm = Field(alias="signatureMethod")
    digest_method: SamlDigestAlgorithm = Field(alias="digestMethod")


class SetOrganizationInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    limit: RepositoryInteractionLimit
    expiry: Optional[RepositoryInteractionLimitExpiry] = None


class SetRepositoryInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    limit: RepositoryInteractionLimit
    expiry: Optional[RepositoryInteractionLimitExpiry] = None


class SetUserInteractionLimitInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")
    limit: RepositoryInteractionLimit
    expiry: Optional[RepositoryInteractionLimitExpiry] = None


class SponsorAndLifetimeValueOrder(BaseModel):
    field: SponsorAndLifetimeValueOrderField
    direction: OrderDirection


class SponsorOrder(BaseModel):
    field: SponsorOrderField
    direction: OrderDirection


class SponsorableOrder(BaseModel):
    field: SponsorableOrderField
    direction: OrderDirection


class SponsorsActivityOrder(BaseModel):
    field: SponsorsActivityOrderField
    direction: OrderDirection


class SponsorsTierOrder(BaseModel):
    field: SponsorsTierOrderField
    direction: OrderDirection


class SponsorshipNewsletterOrder(BaseModel):
    field: SponsorshipNewsletterOrderField
    direction: OrderDirection


class SponsorshipOrder(BaseModel):
    field: SponsorshipOrderField
    direction: OrderDirection


class StarOrder(BaseModel):
    field: StarOrderField
    direction: OrderDirection


class StartOrganizationMigrationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    source_org_url: Any = Field(alias="sourceOrgUrl")
    target_org_name: str = Field(alias="targetOrgName")
    target_enterprise_id: str = Field(alias="targetEnterpriseId")
    source_access_token: str = Field(alias="sourceAccessToken")


class StartRepositoryMigrationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    source_id: str = Field(alias="sourceId")
    owner_id: str = Field(alias="ownerId")
    source_repository_url: Any = Field(alias="sourceRepositoryUrl")
    repository_name: str = Field(alias="repositoryName")
    continue_on_error: Optional[bool] = Field(alias="continueOnError", default=None)
    git_archive_url: Optional[str] = Field(alias="gitArchiveUrl", default=None)
    metadata_archive_url: Optional[str] = Field(
        alias="metadataArchiveUrl", default=None
    )
    access_token: Optional[str] = Field(alias="accessToken", default=None)
    github_pat: Optional[str] = Field(alias="githubPat", default=None)
    skip_releases: Optional[bool] = Field(alias="skipReleases", default=None)
    target_repo_visibility: Optional[str] = Field(
        alias="targetRepoVisibility", default=None
    )
    lock_source: Optional[bool] = Field(alias="lockSource", default=None)


class StatusCheckConfigurationInput(BaseModel):
    context: str
    integration_id: Optional[int] = Field(alias="integrationId", default=None)


class SubmitPullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: Optional[str] = Field(alias="pullRequestId", default=None)
    pull_request_review_id: Optional[str] = Field(
        alias="pullRequestReviewId", default=None
    )
    event: PullRequestReviewEvent
    body: Optional[str] = None


class TagNamePatternParametersInput(BaseModel):
    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


class TeamDiscussionCommentOrder(BaseModel):
    field: TeamDiscussionCommentOrderField
    direction: OrderDirection


class TeamDiscussionOrder(BaseModel):
    field: TeamDiscussionOrderField
    direction: OrderDirection


class TeamMemberOrder(BaseModel):
    field: TeamMemberOrderField
    direction: OrderDirection


class TeamOrder(BaseModel):
    field: TeamOrderField
    direction: OrderDirection


class TeamRepositoryOrder(BaseModel):
    field: TeamRepositoryOrderField
    direction: OrderDirection


class TransferEnterpriseOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    destination_enterprise_id: str = Field(alias="destinationEnterpriseId")


class TransferIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")
    repository_id: str = Field(alias="repositoryId")
    create_labels_if_missing: Optional[bool] = Field(
        alias="createLabelsIfMissing", default=None
    )


class UnarchiveProjectV2ItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")


class UnarchiveRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")


class UnfollowOrganizationInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")


class UnfollowUserInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    user_id: str = Field(alias="userId")


class UnlinkProjectV2FromRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class UnlinkProjectV2FromTeamInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    team_id: str = Field(alias="teamId")


class UnlinkRepositoryFromProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    repository_id: str = Field(alias="repositoryId")


class UnlockLockableInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    lockable_id: str = Field(alias="lockableId")


class UnmarkDiscussionCommentAsAnswerInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class UnmarkFileAsViewedInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    path: str


class UnmarkIssueAsDuplicateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    duplicate_id: str = Field(alias="duplicateId")
    canonical_id: str = Field(alias="canonicalId")


class UnmarkProjectV2AsTemplateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")


class UnminimizeCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subject_id: str = Field(alias="subjectId")


class UnpinIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    issue_id: str = Field(alias="issueId")


class UnresolveReviewThreadInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    thread_id: str = Field(alias="threadId")


class UnsubscribeFromNotificationsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ids: List[str]


class UpdateBranchProtectionRuleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    branch_protection_rule_id: str = Field(alias="branchProtectionRuleId")
    pattern: Optional[str] = None
    requires_approving_reviews: Optional[bool] = Field(
        alias="requiresApprovingReviews", default=None
    )
    required_approving_review_count: Optional[int] = Field(
        alias="requiredApprovingReviewCount", default=None
    )
    requires_commit_signatures: Optional[bool] = Field(
        alias="requiresCommitSignatures", default=None
    )
    requires_linear_history: Optional[bool] = Field(
        alias="requiresLinearHistory", default=None
    )
    blocks_creations: Optional[bool] = Field(alias="blocksCreations", default=None)
    allows_force_pushes: Optional[bool] = Field(alias="allowsForcePushes", default=None)
    allows_deletions: Optional[bool] = Field(alias="allowsDeletions", default=None)
    is_admin_enforced: Optional[bool] = Field(alias="isAdminEnforced", default=None)
    requires_status_checks: Optional[bool] = Field(
        alias="requiresStatusChecks", default=None
    )
    requires_strict_status_checks: Optional[bool] = Field(
        alias="requiresStrictStatusChecks", default=None
    )
    requires_code_owner_reviews: Optional[bool] = Field(
        alias="requiresCodeOwnerReviews", default=None
    )
    dismisses_stale_reviews: Optional[bool] = Field(
        alias="dismissesStaleReviews", default=None
    )
    restricts_review_dismissals: Optional[bool] = Field(
        alias="restrictsReviewDismissals", default=None
    )
    review_dismissal_actor_ids: Optional[List[str]] = Field(
        alias="reviewDismissalActorIds", default=None
    )
    bypass_pull_request_actor_ids: Optional[List[str]] = Field(
        alias="bypassPullRequestActorIds", default=None
    )
    bypass_force_push_actor_ids: Optional[List[str]] = Field(
        alias="bypassForcePushActorIds", default=None
    )
    restricts_pushes: Optional[bool] = Field(alias="restrictsPushes", default=None)
    push_actor_ids: Optional[List[str]] = Field(alias="pushActorIds", default=None)
    required_status_check_contexts: Optional[List[str]] = Field(
        alias="requiredStatusCheckContexts", default=None
    )
    required_status_checks: Optional[List["RequiredStatusCheckInput"]] = Field(
        alias="requiredStatusChecks", default=None
    )
    requires_deployments: Optional[bool] = Field(
        alias="requiresDeployments", default=None
    )
    required_deployment_environments: Optional[List[str]] = Field(
        alias="requiredDeploymentEnvironments", default=None
    )
    requires_conversation_resolution: Optional[bool] = Field(
        alias="requiresConversationResolution", default=None
    )
    require_last_push_approval: Optional[bool] = Field(
        alias="requireLastPushApproval", default=None
    )
    lock_branch: Optional[bool] = Field(alias="lockBranch", default=None)
    lock_allows_fetch_and_merge: Optional[bool] = Field(
        alias="lockAllowsFetchAndMerge", default=None
    )


class UpdateCheckRunInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    check_run_id: str = Field(alias="checkRunId")
    name: Optional[str] = None
    details_url: Optional[Any] = Field(alias="detailsUrl", default=None)
    external_id: Optional[str] = Field(alias="externalId", default=None)
    status: Optional[RequestableCheckStatusState] = None
    started_at: Optional[Any] = Field(alias="startedAt", default=None)
    conclusion: Optional[CheckConclusionState] = None
    completed_at: Optional[Any] = Field(alias="completedAt", default=None)
    output: Optional["CheckRunOutput"] = None
    actions: Optional[List["CheckRunAction"]] = None


class UpdateCheckSuitePreferencesInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    auto_trigger_preferences: List["CheckSuiteAutoTriggerPreference"] = Field(
        alias="autoTriggerPreferences"
    )


class UpdateDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    comment_id: str = Field(alias="commentId")
    body: str


class UpdateDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    discussion_id: str = Field(alias="discussionId")
    title: Optional[str] = None
    body: Optional[str] = None
    category_id: Optional[str] = Field(alias="categoryId", default=None)


class UpdateEnterpriseAdministratorRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    login: str
    role: EnterpriseAdministratorRole


class UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")
    policy_value: Optional[EnterpriseAllowPrivateRepositoryForkingPolicyValue] = Field(
        alias="policyValue", default=None
    )


class UpdateEnterpriseDefaultRepositoryPermissionSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseDefaultRepositoryPermissionSettingValue = Field(
        alias="settingValue"
    )


class UpdateEnterpriseDeployKeySettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanCreateRepositoriesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: Optional[EnterpriseMembersCanCreateRepositoriesSettingValue] = Field(
        alias="settingValue", default=None
    )
    members_can_create_repositories_policy_enabled: Optional[bool] = Field(
        alias="membersCanCreateRepositoriesPolicyEnabled", default=None
    )
    members_can_create_public_repositories: Optional[bool] = Field(
        alias="membersCanCreatePublicRepositories", default=None
    )
    members_can_create_private_repositories: Optional[bool] = Field(
        alias="membersCanCreatePrivateRepositories", default=None
    )
    members_can_create_internal_repositories: Optional[bool] = Field(
        alias="membersCanCreateInternalRepositories", default=None
    )


class UpdateEnterpriseMembersCanDeleteIssuesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanMakePurchasesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseMembersCanMakePurchasesSettingValue = Field(
        alias="settingValue"
    )


class UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseOrganizationProjectsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseOwnerOrganizationRoleInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    organization_id: str = Field(alias="organizationId")
    organization_role: RoleInOrganization = Field(alias="organizationRole")


class UpdateEnterpriseProfileInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    name: Optional[str] = None
    description: Optional[str] = None
    website_url: Optional[str] = Field(alias="websiteUrl", default=None)
    location: Optional[str] = None


class UpdateEnterpriseRepositoryProjectsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseTeamDiscussionsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledDisabledSettingValue = Field(alias="settingValue")


class UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseDisallowedMethodsSettingValue = Field(alias="settingValue")


class UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    enterprise_id: str = Field(alias="enterpriseId")
    setting_value: EnterpriseEnabledSettingValue = Field(alias="settingValue")


class UpdateEnvironmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    environment_id: str = Field(alias="environmentId")
    wait_timer: Optional[int] = Field(alias="waitTimer", default=None)
    reviewers: Optional[List[str]] = None
    prevent_self_review: Optional[bool] = Field(alias="preventSelfReview", default=None)


class UpdateIpAllowListEnabledSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: IpAllowListEnabledSettingValue = Field(alias="settingValue")


class UpdateIpAllowListEntryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ip_allow_list_entry_id: str = Field(alias="ipAllowListEntryId")
    allow_list_value: str = Field(alias="allowListValue")
    name: Optional[str] = None
    is_active: bool = Field(alias="isActive")


class UpdateIpAllowListForInstalledAppsEnabledSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: IpAllowListForInstalledAppsEnabledSettingValue = Field(
        alias="settingValue"
    )


class UpdateIssueCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    body: str


class UpdateIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    title: Optional[str] = None
    body: Optional[str] = None
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    state: Optional[IssueState] = None
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)


class UpdateLabelInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    color: Optional[str] = None
    description: Optional[str] = None
    name: Optional[str] = None


class UpdateNotificationRestrictionSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    owner_id: str = Field(alias="ownerId")
    setting_value: NotificationRestrictionSettingValue = Field(alias="settingValue")


class UpdateOrganizationAllowPrivateRepositoryForkingSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    forking_enabled: bool = Field(alias="forkingEnabled")


class UpdateOrganizationWebCommitSignoffSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    organization_id: str = Field(alias="organizationId")
    web_commit_signoff_required: bool = Field(alias="webCommitSignoffRequired")


class UpdateParametersInput(BaseModel):
    update_allows_fetch_and_merge: bool = Field(alias="updateAllowsFetchAndMerge")


class UpdatePatreonSponsorabilityInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    enable_patreon_sponsorships: bool = Field(alias="enablePatreonSponsorships")


class UpdateProjectCardInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_card_id: str = Field(alias="projectCardId")
    is_archived: Optional[bool] = Field(alias="isArchived", default=None)
    note: Optional[str] = None


class UpdateProjectColumnInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_column_id: str = Field(alias="projectColumnId")
    name: str


class UpdateProjectInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    name: Optional[str] = None
    body: Optional[str] = None
    state: Optional[ProjectState] = None
    public: Optional[bool] = None


class UpdateProjectV2CollaboratorsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    collaborators: List["ProjectV2Collaborator"]


class UpdateProjectV2DraftIssueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    draft_issue_id: str = Field(alias="draftIssueId")
    title: Optional[str] = None
    body: Optional[str] = None
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)


class UpdateProjectV2Input(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    title: Optional[str] = None
    short_description: Optional[str] = Field(alias="shortDescription", default=None)
    readme: Optional[str] = None
    closed: Optional[bool] = None
    public: Optional[bool] = None


class UpdateProjectV2ItemFieldValueInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")
    field_id: str = Field(alias="fieldId")
    value: "ProjectV2FieldValue"


class UpdateProjectV2ItemPositionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    project_id: str = Field(alias="projectId")
    item_id: str = Field(alias="itemId")
    after_id: Optional[str] = Field(alias="afterId", default=None)


class UpdateProjectV2StatusUpdateInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    status_update_id: str = Field(alias="statusUpdateId")
    start_date: Optional[Any] = Field(alias="startDate", default=None)
    target_date: Optional[Any] = Field(alias="targetDate", default=None)
    status: Optional[ProjectV2StatusUpdateStatus] = None
    body: Optional[str] = None


class UpdatePullRequestBranchInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    expected_head_oid: Optional[Any] = Field(alias="expectedHeadOid", default=None)
    update_method: Optional[PullRequestBranchUpdateMethod] = Field(
        alias="updateMethod", default=None
    )


class UpdatePullRequestInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_id: str = Field(alias="pullRequestId")
    base_ref_name: Optional[str] = Field(alias="baseRefName", default=None)
    title: Optional[str] = None
    body: Optional[str] = None
    state: Optional[PullRequestUpdateState] = None
    maintainer_can_modify: Optional[bool] = Field(
        alias="maintainerCanModify", default=None
    )
    assignee_ids: Optional[List[str]] = Field(alias="assigneeIds", default=None)
    milestone_id: Optional[str] = Field(alias="milestoneId", default=None)
    label_ids: Optional[List[str]] = Field(alias="labelIds", default=None)
    project_ids: Optional[List[str]] = Field(alias="projectIds", default=None)


class UpdatePullRequestReviewCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_comment_id: str = Field(alias="pullRequestReviewCommentId")
    body: str


class UpdatePullRequestReviewInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    pull_request_review_id: str = Field(alias="pullRequestReviewId")
    body: str


class UpdateRefInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    ref_id: str = Field(alias="refId")
    oid: Any
    force: Optional[bool] = None


class UpdateRefsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    ref_updates: List["RefUpdate"] = Field(alias="refUpdates")


class UpdateRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    name: Optional[str] = None
    description: Optional[str] = None
    template: Optional[bool] = None
    homepage_url: Optional[Any] = Field(alias="homepageUrl", default=None)
    has_wiki_enabled: Optional[bool] = Field(alias="hasWikiEnabled", default=None)
    has_issues_enabled: Optional[bool] = Field(alias="hasIssuesEnabled", default=None)
    has_projects_enabled: Optional[bool] = Field(
        alias="hasProjectsEnabled", default=None
    )
    has_discussions_enabled: Optional[bool] = Field(
        alias="hasDiscussionsEnabled", default=None
    )
    has_sponsorships_enabled: Optional[bool] = Field(
        alias="hasSponsorshipsEnabled", default=None
    )


class UpdateRepositoryRulesetInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_ruleset_id: str = Field(alias="repositoryRulesetId")
    name: Optional[str] = None
    target: Optional[RepositoryRulesetTarget] = None
    rules: Optional[List["RepositoryRuleInput"]] = None
    conditions: Optional["RepositoryRuleConditionsInput"] = None
    enforcement: Optional[RuleEnforcement] = None
    bypass_actors: Optional[List["RepositoryRulesetBypassActorInput"]] = Field(
        alias="bypassActors", default=None
    )


class UpdateRepositoryWebCommitSignoffSettingInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    web_commit_signoff_required: bool = Field(alias="webCommitSignoffRequired")


class UpdateSponsorshipPreferencesInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    sponsor_id: Optional[str] = Field(alias="sponsorId", default=None)
    sponsor_login: Optional[str] = Field(alias="sponsorLogin", default=None)
    sponsorable_id: Optional[str] = Field(alias="sponsorableId", default=None)
    sponsorable_login: Optional[str] = Field(alias="sponsorableLogin", default=None)
    receive_emails: Optional[bool] = Field(alias="receiveEmails", default=None)
    privacy_level: Optional[SponsorshipPrivacy] = Field(
        alias="privacyLevel", default=None
    )


class UpdateSubscriptionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    subscribable_id: str = Field(alias="subscribableId")
    state: SubscriptionState


class UpdateTeamDiscussionCommentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    body: str
    body_version: Optional[str] = Field(alias="bodyVersion", default=None)


class UpdateTeamDiscussionInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    title: Optional[str] = None
    body: Optional[str] = None
    body_version: Optional[str] = Field(alias="bodyVersion", default=None)
    pinned: Optional[bool] = None


class UpdateTeamReviewAssignmentInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str
    enabled: bool
    algorithm: Optional[TeamReviewAssignmentAlgorithm] = None
    team_member_count: Optional[int] = Field(alias="teamMemberCount", default=None)
    notify_team: Optional[bool] = Field(alias="notifyTeam", default=None)
    remove_team_request: Optional[bool] = Field(alias="removeTeamRequest", default=None)
    include_child_team_members: Optional[bool] = Field(
        alias="includeChildTeamMembers", default=None
    )
    count_members_already_requested: Optional[bool] = Field(
        alias="countMembersAlreadyRequested", default=None
    )
    excluded_team_member_ids: Optional[List[str]] = Field(
        alias="excludedTeamMemberIds", default=None
    )


class UpdateTeamsRepositoryInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    team_ids: List[str] = Field(alias="teamIds")
    permission: RepositoryPermission


class UpdateTopicsInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    repository_id: str = Field(alias="repositoryId")
    topic_names: List[str] = Field(alias="topicNames")


class UpdateUserListInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    list_id: str = Field(alias="listId")
    name: Optional[str] = None
    description: Optional[str] = None
    is_private: Optional[bool] = Field(alias="isPrivate", default=None)


class UpdateUserListsForItemInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    item_id: str = Field(alias="itemId")
    list_ids: List[str] = Field(alias="listIds")
    suggested_list_ids: Optional[List[str]] = Field(
        alias="suggestedListIds", default=None
    )


class UserStatusOrder(BaseModel):
    field: UserStatusOrderField
    direction: OrderDirection


class VerifiableDomainOrder(BaseModel):
    field: VerifiableDomainOrderField
    direction: OrderDirection


class VerifyVerifiableDomainInput(BaseModel):
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)
    id: str


class WorkflowFileReferenceInput(BaseModel):
    path: str
    ref: Optional[str] = None
    repository_id: int = Field(alias="repositoryId")
    sha: Optional[str] = None


class WorkflowRunOrder(BaseModel):
    field: WorkflowRunOrderField
    direction: OrderDirection


class WorkflowsParametersInput(BaseModel):
    do_not_enforce_on_create: Optional[bool] = Field(
        alias="doNotEnforceOnCreate", default=None
    )
    workflows: List["WorkflowFileReferenceInput"]


AddPullRequestReviewInput.model_rebuild()
CheckAnnotationData.model_rebuild()
CheckRunOutput.model_rebuild()
CodeScanningParametersInput.model_rebuild()
CreateBranchProtectionRuleInput.model_rebuild()
CreateCheckRunInput.model_rebuild()
CreateCommitOnBranchInput.model_rebuild()
CreateProjectV2FieldInput.model_rebuild()
CreateRepositoryRulesetInput.model_rebuild()
CreateSponsorshipsInput.model_rebuild()
FileChanges.model_rebuild()
ImportProjectInput.model_rebuild()
ProjectColumnImport.model_rebuild()
RepositoryPropertyConditionTargetInput.model_rebuild()
RepositoryRuleConditionsInput.model_rebuild()
RepositoryRuleInput.model_rebuild()
RequiredStatusChecksParametersInput.model_rebuild()
RuleParametersInput.model_rebuild()
UpdateBranchProtectionRuleInput.model_rebuild()
UpdateCheckRunInput.model_rebuild()
UpdateCheckSuitePreferencesInput.model_rebuild()
UpdateProjectV2CollaboratorsInput.model_rebuild()
UpdateProjectV2ItemFieldValueInput.model_rebuild()
UpdateRefsInput.model_rebuild()
UpdateRepositoryRulesetInput.model_rebuild()
WorkflowsParametersInput.model_rebuild()
